/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oca.project;

import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Inna
 */
public class CreatePaymentsForm extends javax.swing.JFrame {

    //Declared
    private ArrayList<Person> person = new ArrayList();
    private ArrayList<PayrollReportItem> payrollReportList = new ArrayList();
    
    /**
     * Creates new form CreatePaymentsForm
     * @param person
     */
    public CreatePaymentsForm(ArrayList<Person> person) {
        initComponents();
        this.person = person;
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        msgMessage = new javax.swing.JOptionPane();
        btnCreateMonthlySalariedPayments = new javax.swing.JButton();
        btnCreateFortnightlyPayments = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblAssign = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        btnCreateMonthlySalariedPayments.setBackground(new java.awt.Color(102, 255, 102));
        btnCreateMonthlySalariedPayments.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnCreateMonthlySalariedPayments.setText("Create Monthly Payment ");
        btnCreateMonthlySalariedPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateMonthlySalariedPaymentsActionPerformed(evt);
            }
        });

        btnCreateFortnightlyPayments.setBackground(new java.awt.Color(102, 255, 102));
        btnCreateFortnightlyPayments.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnCreateFortnightlyPayments.setText("Create Fortnightly Payments");
        btnCreateFortnightlyPayments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateFortnightlyPaymentsActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Add Payments");

        btnBack.setBackground(new java.awt.Color(102, 255, 102));
        btnBack.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblAssign.setBackground(new java.awt.Color(102, 102, 255));
        lblAssign.setFont(new java.awt.Font("Lucida Sans", 1, 36)); // NOI18N
        lblAssign.setForeground(new java.awt.Color(102, 102, 102));
        lblAssign.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAssign.setText("Best IT Paytoll");
        lblAssign.setAutoscrolls(true);
        lblAssign.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(lblAssign, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCreateMonthlySalariedPayments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateFortnightlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCreateMonthlySalariedPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCreateFortnightlyPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateMonthlySalariedPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateMonthlySalariedPaymentsActionPerformed
        for(Person p: getPerson()){
            if (!p.isIsContractor()){
                ISalariedPerson salariedPerson = (ISalariedPerson) p;
                if (salariedPerson.getTimePeriod() == TimePeriods.MONTHLY){
                    double salary = SalaryPaymentCalculator.calculatePay(salariedPerson);
                    PayrollReportItem reportItem = new PayrollReportItem(p, salary, MainForm.calendar.getTime(), salariedPerson.getTimePeriod());
                    payrollReportList.add(reportItem);
                    MainForm.addToPayroll(reportItem);
                }
            }
        }
        //Changes Date
        MainForm.calendar.setTime(MainForm.getMonthlyPayDate());
        JOptionPane.showMessageDialog(this, "Monthly payments have been added for " + MainForm.calendar.getTime(), "Announcement", WIDTH);
        MainForm.calendar.add(Calendar.MONTH, 1);
        MainForm.calendar.setTime(MainForm.calendar.getTime());
        MainForm.setMonthlyPayDate(MainForm.calendar.getTime());
    }//GEN-LAST:event_btnCreateMonthlySalariedPaymentsActionPerformed

    private void btnCreateFortnightlyPaymentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateFortnightlyPaymentsActionPerformed
        for(Person p: getPerson()){
            if (!p.isIsContractor()){
                ISalariedPerson salariedPerson = (ISalariedPerson) p;
                if (salariedPerson.getTimePeriod() == TimePeriods.FORTNIGHTLY){
                    double salary = SalaryPaymentCalculator.calculatePay(salariedPerson);
                    PayrollReportItem reportItem = new PayrollReportItem(p, salary, MainForm.calendar.getTime(), salariedPerson.getTimePeriod());
                    payrollReportList.add(reportItem);
                    MainForm.addToPayroll(reportItem);
                }
            }
        }
        //Changes Date
        MainForm.calendar.setTime(MainForm.getFortnightlyPayDate());
        JOptionPane.showMessageDialog(this, "Fortnightly payments have been added for " + MainForm.calendar.getTime(), "Announcement", WIDTH);
        MainForm.calendar.add(Calendar.DATE, 14);
        MainForm.calendar.setTime(MainForm.calendar.getTime());
        MainForm.setFortnightlyPayDate(MainForm.calendar.getTime());
        
        
    }//GEN-LAST:event_btnCreateFortnightlyPaymentsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        MainForm form = new MainForm(getPerson());
        form.show();
        this.hide();
    }//GEN-LAST:event_btnBackActionPerformed
    

    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CreatePaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CreatePaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CreatePaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CreatePaymentsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CreatePaymentsForm().setVisible(true);
//            }
//        });
    
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateFortnightlyPayments;
    private javax.swing.JButton btnCreateMonthlySalariedPayments;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblAssign;
    private javax.swing.JOptionPane msgMessage;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the person
     */
    public ArrayList<Person> getPerson() {
        return person;
    }

    /**
     * @param person the person to set
     */
    public void setPerson(ArrayList<Person> person) {
        this.person = person;
    }

    /**
     * @return the payrollReportList
     */
    public ArrayList<PayrollReportItem> getPayrollReportList() {
        return payrollReportList;
    }

    /**
     * @param payrollReportList the payrollReportList to set
     */
    public void setPayrollReportList(ArrayList<PayrollReportItem> payrollReportList) {
        this.payrollReportList = payrollReportList;
    }
}
